plugins {
    id 'idea'
    id 'jacoco'
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'
}

group = 'app.tarcisio'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

idea {
    module {
        downloadSources = true
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    set('springCloudVersion', "2024.0.1")
    set("h2Version", "2.3.232")
}

dependencies {

    // Spring Framework
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Adicionais
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6")
    implementation 'org.zalando:logbook-spring-boot-starter:3.12.0'
    implementation 'org.flywaydb:flyway-core'

    // Kotlin
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    // Outras
    runtimeOnly "com.h2database:h2:${h2Version}"

    // Testes
    testImplementation "com.h2database:h2:${h2Version}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation("org.mockito.kotlin:mockito-kotlin:5.2.1")
    testImplementation 'org.apache.commons:commons-lang3:3.17.0'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation("org.springframework.cloud:spring-cloud-starter-contract-stub-runner")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

allOpen {
    annotation 'jakarta.persistence.Entity'
    annotation 'jakarta.persistence.MappedSuperclass'
    annotation 'jakarta.persistence.Embeddable'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.jacocoTestReport {
    dependsOn(tasks.test) // Garante que os testes rodem antes do relatório
    reports {
        html.required.set(true) // Gera relatório HTML
        xml.required.set(false)
        csv.required.set(false)
        html.outputLocation.set(file("./code-coverage/jacoco-report/jacocoHtml"))
    }
}

tasks.jacocoTestCoverageVerification {
    dependsOn(tasks.jacocoTestReport)
    violationRules {
        rule {
            element = "PACKAGE"
            limit {
                counter = "CLASS"
                value = "COVEREDRATIO"
                minimum = 0.50 // 50% de cobertura de linha
            }
        }
    }
}

tasks.test {
    finalizedBy(tasks.jacocoTestReport)
}
